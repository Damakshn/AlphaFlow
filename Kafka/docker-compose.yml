version: '3.9'
name: explore-kafka
services:
  zookeeper:
    image: bitnami/zookeeper:${ZOOKEEPER_TAG}
    restart: unless-stopped
    container_name: zookeeper
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      interval: 10s
      retries: 5
    environment:
      ZOO_PORT_NUMBER: 2181
      ZOO_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - zk-data:/bitnami/zookeeper/data
      - zk-logs:/bitnami/zookeeper/log
  kafka0:
    image: bitnami/kafka:${KAFKA_TAG}
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka0:9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    container_name: kafka0
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:9092
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    volumes:
      - kafka0-data:/bitnami/kafka
    restart: unless-stopped
  kafka1:
    image: bitnami/kafka:${KAFKA_TAG}
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka1:9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    container_name: kafka1
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    volumes:
      - kafka1-data:/bitnami/kafka
    restart: unless-stopped
  kafka2:
    image: bitnami/kafka:${KAFKA_TAG}
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka2:9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    container_name: kafka2
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_CFG_BROKER_ID: 3
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    volumes:
      - kafka2-data:/bitnami/kafka
    restart: unless-stopped
  kafka-ui:
    image: provectuslabs/kafka-ui:${KAFKA_UI_TAG}
    container_name: kafka-ui
    ports:
      - 8080:8080
    depends_on:
      kafka0:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    restart: unless-stopped
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka0:9092,kafka1:9092,kafka2:9092'
  kafka-init-topics:
      image: bitnami/kafka:${KAFKA_TAG}
      depends_on:
        kafka0:
          condition: service_healthy
      command: "bash -c 'echo Waiting for Kafka to be ready... && \
                   kafka-topics.sh --list --bootstrap-server kafka0:9092 && \
                   kafka-topics.sh --create --topic weather.main.feed --partitions 3 --replication-factor 3 --if-not-exists --bootstrap-server kafka0:9092'"
volumes:
   zk-data:
   zk-logs:  
   kafka0-data:
   kafka1-data:
   kafka2-data:
